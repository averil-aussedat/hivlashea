var documenterSearchIndex = {"docs":
[{"location":"","page":"Stationary Sheath","title":"Stationary Sheath","text":"CurrentModule = StationarySheath","category":"page"},{"location":"#Stationary-Sheath","page":"Stationary Sheath","title":"Stationary Sheath","text":"","category":"section"},{"location":"","page":"Stationary Sheath","title":"Stationary Sheath","text":"","category":"page"},{"location":"","page":"Stationary Sheath","title":"Stationary Sheath","text":"Modules = [StationarySheath]","category":"page"},{"location":"#StationarySheath.Feb","page":"Stationary Sheath","title":"StationarySheath.Feb","text":"mutable struct Feb\n\nBoundary condition f_eb for the electron density at (x=0v0).\n\nLe_threshold::Float64\nMaximal electric energy mathcalL_e(xv) s.t. (xv)insupp(f_eb)\nvalue::Function\nPrescribed value at (x=0vleqslant 0)\n\n\n\n\n\n","category":"type"},{"location":"#StationarySheath.Mesh","page":"Stationary Sheath","title":"StationarySheath.Mesh","text":"struct Mesh\n\nmin::Float64\nMinimal value\nmax::Float64\nMaximal value\nstep::Float64\nStep\nNN::Int64\nNumber of intervals\nmesh::Vector{Float64}\nMesh itself\n\n\n\n\n\n","category":"type"},{"location":"#StationarySheath.Params","page":"Stationary Sheath","title":"StationarySheath.Params","text":"struct Params\n\nλ::Float64\nDebye length\nμ::Float64\nMass ratio\nν::Float64\nIonization factor\nmeshx::Mesh\nSpace mesh\nNvi::Int64\nNumber of points in ion speed mesh\nNve::Int64\nNumber of points in electron speed mesh\nNit_max::Int64\nMaximal number of fixed-point iterations\n\n\n\n\n\n","category":"type"},{"location":"#StationarySheath.Phidata_grid","page":"Stationary Sheath","title":"StationarySheath.Phidata_grid","text":"struct Phidata_grid <: Phidata\n\nRepresentation of ϕ on a 1D regular mesh. \n\nvalues::Vector{Float64}\nPointwise values on the space mesh\n\n\n\n\n\n","category":"type"},{"location":"#StationarySheath.Phidata_poly","page":"Stationary Sheath","title":"StationarySheath.Phidata_poly","text":"struct Phidata_poly <: Phidata\n\nPolynomial representation of ϕ. Basis are     * canonical: starting from degree 2.      * pair: only pair expononents of the canonical basis.\n\ncardinal::Int64\nCardinal of the basis\nbasis::String\nBasis choice\nhorner::Vector{Vector{Float64}}\nArray of Horner coefficients for x -> p(x)\nhorner_dx::Vector{Vector{Float64}}\nArray of Horner coefficients for x -> p'(x)\nVandermonde::Matrix{Float64}\nMatrix of the linear system for the Poisson solver\ncoeffs::Vector\nCoefficients in the basis\n\n\n\n\n\n","category":"type"},{"location":"#StationarySheath.build_fe!-Tuple{Matrix, Params, Feb, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.build_fe!","text":"build_fe!(fe, params, f_eb, phix)\n\n\nEvaluation of ``f_e`` on the regular grid meshx × meshve. \n\nThe speed mesh is computed to fit 0 ⩽ 𝓛ₑ ⩽ 𝓛ₑ(1,0).\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.build_fi!-Tuple{Matrix, Params, Feb, Vector{Float64}, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.build_fi!","text":"build_fi!(fi, params, f_eb, phix, phidx)\n\n\nApproximation of ``f_i`` on a regular grid meshx × meshvi.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.compute_ne!-Tuple{Vector, Vector{Float64}, Vector{Float64}, Params, Feb, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.compute_ne!","text":"compute_ne!(ne, chare, tointe, params, f_eb, phix)\n\n\nComputation of \n```math\n    n_e(x) = \\int_{v\\in\\mathbb{R}} f_e(x,v) dv = 2 \\int_{v \\leqslant 0} f_e(x,v) dv.\n```\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.compute_ni!-Tuple{Vector, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Params, Feb, Vector{Float64}, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.compute_ni!","text":"compute_ni!(\n    ni,\n    chari,\n    vi,\n    vip,\n    toint,\n    params,\n    f_eb,\n    phix,\n    phidx\n)\n\n\nComputation of \n```math\n    n_i(x) = \\int_{v\\in\\mathbb{R}} f_i(x,v) dv = 2 \\int_{v \\leqslant 0} f_i(x_b(x,v),v_b(x,v)) dv.\n```\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.diags_end-Tuple{Params, Phidata, Feb, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Int64}","page":"Stationary Sheath","title":"StationarySheath.diags_end","text":"diags_end(params, phi, f_eb, ni, ne, phix, phidx, n)\n\n\nAggregation of diagnostics performed at the end of the program.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.diags_loop-Tuple{Params, Phidata, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Int64, Float64}","page":"Stationary Sheath","title":"StationarySheath.diags_loop","text":"diags_loop(params, phi, ni, ne, phix, phixp, n, eps)\n\n\nAggregation of diagnostics performed during the fixed-point loop.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.eval_fe!-Tuple{Any, Feb, Params, Any, Any}","page":"Stationary Sheath","title":"StationarySheath.eval_fe!","text":"eval_fe!(res, f_eb, params, phix, v)\n\n\nReturn the value ``f_e(x,v)``. \n\nNote that the non-emitting boundary condition has precedence over\nthe prescribed value ``f_{e,b}``, and the result will be 0\nwhenever 𝓛ₑ(x,v) ⩾ 𝓛ₑ(1,0).\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.eval_phi-Tuple{Phidata_grid, Params, Any}","page":"Stationary Sheath","title":"StationarySheath.eval_phi","text":"eval_phi(phi, params, x)\n\n\nValue of ϕ at `x`.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.eval_phi-Tuple{Phidata_poly, Params, Any}","page":"Stationary Sheath","title":"StationarySheath.eval_phi","text":"eval_phi(phi, params, x)\n\n\nValue of ϕ at `x`.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.eval_phi_dx-Tuple{Phidata_grid, Params, Any}","page":"Stationary Sheath","title":"StationarySheath.eval_phi_dx","text":"eval_phi_dx(phi, params, x)\n\n\nValue of ϕ' at `x`.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.eval_phi_dx-Tuple{Phidata_poly, Params, Any}","page":"Stationary Sheath","title":"StationarySheath.eval_phi_dx","text":"eval_phi_dx(phi, params, x)\n\n\nValue of ϕ' at `x`.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.evaluate_poly-Tuple{Any, Any}","page":"Stationary Sheath","title":"StationarySheath.evaluate_poly","text":"evaluate_poly(eval, x)\n\n\nReturn the polynomial \n```math\n    a_1 + x (a_2 + x \\dots (a_{n-1} + x a_n))\n```\nwith `eval```=[a_1,\\dots,a_n]``.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.get_v_char_e-Tuple{Params, Any, Any, Any}","page":"Stationary Sheath","title":"StationarySheath.get_v_char_e","text":"get_v_char_e(params, v0, phix0, phix)\n\n\nReturn the negative ``v`` such that\n```math\n    \\frac{v^2}{2} - \\frac{1}{\\mu} \\phi(x) = \\frac{v_0^2}{2} - \\frac{1}{\\mu} \\phi(x_0)\n```\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.get_v_char_i-Tuple{Any, Any, Any}","page":"Stationary Sheath","title":"StationarySheath.get_v_char_i","text":"get_v_char_i(v0, phix0, phix)\n\n\nReturn the negative ``v`` such that\n```math\n    \\frac{v^2}{2} + \\phi(x) = \\frac{v_0^2}{2} + \\phi(x_0)\n```\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.integral_char_00!-Tuple{Vector{Float64}, Vector{Float64}, Params, Vector{Float64}, Feb}","page":"Stationary Sheath","title":"StationarySheath.integral_char_00!","text":"integral_char_00!(vi, toint, params, phix, f_eb)\n\n\nSpecial case of the critical characteristic:\nuse of a rectangle integration scheme to avoid the equilibrium point ``(x=0,v=0)``.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.integral_char_vb0!-Tuple{Vector{Float64}, Vector{Float64}, Params, Int64, Vector{Float64}, Vector{Float64}, Feb}","page":"Stationary Sheath","title":"StationarySheath.integral_char_vb0!","text":"integral_char_vb0!(\n    vi,\n    toint,\n    params,\n    ixb,\n    phix,\n    phidx,\n    f_eb\n)\n\n\nCompute the integral of f_e along the ion characteristic reaching ``(x_b>0,v_b=0)`` at ``\\tau=0``.\nHere ``x_b`` is known through ``\\phi(x_b)`` only. Uses \n```math\n    \\int_{\\tau=-\\infty}^{0} f_e(x(\\tau),v(\\tau))\n    = \\int_{v=vmin}^{0} \\frac{f_e(x(v),v)}{-\\phi'(x(v))} dv\n```\nand a trapeze integral on the points ``(x(v),v)`` s.t. ``x(v)\\in``meshx.\nPreallocated vectors vi and toint will be modified by the function.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.integral_char_xb0!-Tuple{Vector{Float64}, Vector{Float64}, Params, Float64, Vector{Float64}, Feb}","page":"Stationary Sheath","title":"StationarySheath.integral_char_xb0!","text":"integral_char_xb0!(vi, toint, params, vb, phix, f_eb)\n\n\nCompute the integral of f_e along the ion characteristic reaching ``(x_b=0,v_b<0)`` at ``\\tau=0``.\nUses \n```math\n    \\int_{\\tau=-\\infty}^{0} f_e(x(\\tau),v(\\tau))\n    = \\int_{z=0}^{1} \\frac{f_e(z,-\\sqrt{v_b^2 - 2*\\phi(z)})}{-\\sqrt{v_b^2 - 2*\\phi(z)}} dz\n```\nand a trapeze integral on the points ``(z,-g_z(v_b))`` s.t. ``z\\in``meshx.\nPreallocated vectors vi and toint will be modified by the function.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.ploot-Tuple{Mesh, Vector{Float64}, String}","page":"Stationary Sheath","title":"StationarySheath.ploot","text":"ploot(mesh, value, tag; erase)\n\n\nPlot and wait for user input.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.solve_Poisson!-Tuple{Phidata_grid, Params, Vector{Float64}, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.solve_Poisson!","text":"solve_Poisson!(phi, params, ni, ne)\n\n\nResolution by quadrature when ``\\phi`` is approximated pointwise.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.solve_Poisson!-Tuple{Phidata_poly, Params, Vector{Float64}, Vector{Float64}}","page":"Stationary Sheath","title":"StationarySheath.solve_Poisson!","text":"solve_Poisson!(phi, params, ni, ne)\n\n\nResolution by least squares when ``\\phi`` is decomposed in a polynomial basis.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.𝓛ᵢ-Tuple{Any, Any}","page":"Stationary Sheath","title":"StationarySheath.𝓛ᵢ","text":"𝓛ᵢ(phix, v)\n\n\nIon infinitesimal energy.\n\n\n\n\n\n","category":"method"},{"location":"#StationarySheath.𝓛ₑ-Tuple{Params, Any, Any}","page":"Stationary Sheath","title":"StationarySheath.𝓛ₑ","text":"𝓛ₑ(params, phix, v)\n\n\nElectric infinitesimal energy.\n\n\n\n\n\n","category":"method"}]
}
